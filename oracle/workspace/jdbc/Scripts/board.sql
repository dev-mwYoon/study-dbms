CREATE SEQUENCE SEQ_BOARD;
DROP SEQUENCE SEQ_BOARD;
/*===========================*/

CREATE SEQUENCE SEQ_BOARD;

CREATE TABLE TBL_BOARD(
   BOARD_ID NUMBER CONSTRAINT PK_BOARD PRIMARY KEY,
   BOARD_TITLE VARCHAR2(500) NOT NULL,
   BOARD_CONTENT VARCHAR2(1000) NOT NULL,
   BOARD_REGISTER_DATE DATE,
   BOARD_UPDATE_DATE DATE,
   USER_ID NUMBER NOT NULL,
   CONSTRAINT FK_BOARD_USER FOREIGN KEY(USER_ID) REFERENCES TBL_USER(USER_ID)
   ON DELETE CASCADE
);

SELECT * FROM TBL_BOARD;


/*===========================*/
CREATE TABLE TBL_BOARD(
	BOARD_ID NUMBER CONSTRAINT PK_BOARD PRIMARY KEY,
	BOARD_TITLE VARCHAR2(500) NOT NULL,
	BOARD_CONTENT VARCHAR2(1000) NOT NULL,
	BOARD_REGISTER_DATE DATE,
	BOARD_UPDATE_DATE DATE,
	USER_ID NUMBER NOT NULL,
	CONSTRAINT FK_BOARD_USER FOREIGN KEY(USER_ID) REFERENCES TBL_USER(USER_ID)
	ON DELETE CASCADE
);
DROP TABLE TBL_BOARD ;

SELECT * FROM TBL_BOARD ;

SELECT * FROM TBL_BOARD WHERE BOARD_ID = ?;

UPDATE TBL_BOARD SET BOARD_LIKE = 0
WHERE BOARD_ID = 1;

/*게시글 추가*/
INSERT INTO TBL_BOARD 
(BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_REGISTER_DATE, BOARD_UPDATE_DATE, USER_ID)
VALUES (SEQ_BOARD.NEXTVAL, '네 번째 게시글', '테스트', SYSDATE, SYSDATE, 2);

/*좋아요 컬럼 추가*/
ALTER TABLE TBL_BOARD MODIFY BOARD_LIKE NUMBER DEFAULT 0;



UPDATE TBL_BOARD SET BOARD_LIKE = (SELECT BOARD_LIKE FROM TBL_BOARD WHERE BOARD_ID = ?) + 1 WHERE BOARD_ID = ?;

INSERT INTO TBL_LIKE 
(LIKE_ID, USER_ID, BOARD_ID)
VALUES (SEQ_LIKE.NEXTVAL, ?, ?);

DROP TRIGGER TRIGGER_LIKE;

CREATE OR REPLACE TRIGGER TRIGGER_LIKE
AFTER 
UPDATE ON TBL_BOARD
FOR EACH ROW
WHEN (new.BOARD_LIKE = (old.BOARD_LIKE + 1))
BEGIN
	INSERT INTO TBL_LIKE (LIKE_ID, USER_ID, BOARD_ID)
	VALUES (SEQ_LIKE.NEXTVAL, :NEW.USER_ID, :NEW.BOARD_ID)
END;

UPDATE TBL_BOARD SET BOARD_LIKE = (SELECT BOARD_LIKE FROM TBL_BOARD WHERE BOARD_ID = 1) + 1 WHERE BOARD_ID = 1;

